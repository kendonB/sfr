
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> suppressPackageStartupMessages(library(sf))
> 
> tif = system.file("tif/geomatrix.tif", package = "sf")
> 
> gdal_metadata(tif)
[1] "AREA_OR_POINT=Point"
> gdal_metadata(tif, NA_character_)
[1] "IMAGE_STRUCTURE"     "DERIVED_SUBDATASETS" ""                   
> try(gdal_metadata(tif, "wrongDomain")) 
Error in gdal_metadata(tif, "wrongDomain") : 
  domain_item[1] not found in available metadata domains
> gdal_metadata(tif, c("IMAGE_STRUCTURE"))
[[1]]
[1] "BAND"

attr(,"class")
[1] "gdal_metadata"
> try(length(gdal_metadata(tif, c("DERIVED_SUBDATASETS")))) # fails on Fedora 26
[1] 2
> 
> if (require(stars)) {
+   tif = system.file("tif/geomatrix.tif", package = "sf")
+   r = read_stars(tif)
+   d = (st_dimensions(r))
+   gt =  c(1841001.75, 1.5, -5, 1144003.25, -5, -1.5)
+   x1 = st_as_sfc(d, as_points = TRUE, use_cpp = TRUE, geotransform = gt)
+   x2 = st_as_sfc(d, as_points = TRUE, use_cpp = FALSE, geotransform = gt)
+   print(identical(x1, x2))
+   y1 = st_as_sfc(d, as_points = FALSE, use_cpp = TRUE, geotransform = gt)
+   y2 = st_as_sfc(d, as_points = FALSE, use_cpp = FALSE, geotransform = gt)
+   print(identical(y1, y2))
+ 
+   # rectilinear grid:
+   m = matrix(1:20, nrow = 5, ncol = 4)
+   x = c(0,0.5,1,2,4,5)
+   y = c(0.3,0.5,1,2,2.2)
+   r = st_as_stars(list(m = m), dimensions = st_dimensions(x = x, y = y, .raster = c("x", "y")))
+   print(st_as_sfc(st_dimensions(r), as_points = TRUE))
+   print(st_as_sfc(st_dimensions(r), as_points = FALSE))
+ 
+   # curvilinear grid:
+   lon = st_as_stars(matrix(1:5, 4, 5, byrow = TRUE))
+   lat = st_as_stars(matrix(1:4, 4, 5))
+   ll = c(X1 = lon, X2 = lat)
+   curv = st_as_stars(st_as_stars(t(m)), curvilinear = setNames(ll, c("X1", "X2")))
+   print(st_as_sfc(st_dimensions(curv), as_points = TRUE))
+   print(st_as_sfc(st_dimensions(curv), as_points = FALSE))
+ 
+   demo(nc, echo = FALSE, ask = FALSE)
+   print(x <- st_rasterize(nc)) # default grid:
+   print(p <- st_as_sf(x, as_points = FALSE)) # polygonize: follow raster boundaries
+   print(p <- st_as_sf(x, as_points = FALSE, use_integer = TRUE)) # polygonize integers: follow raster boundaries
+   print(try(p <- st_as_sf(x, as_points = TRUE))) # polygonize: contour, requies GDAL >= 2.4.0
+   if (utils::packageVersion("stars") >= "0.2-1") {
+     st_write(read_stars(tif), tempfile(fileext = ".tif"))
+     st_write(read_stars(tif, proxy = TRUE), tempfile(fileext = ".tif"))
+     st_write(read_stars(tif, proxy = TRUE), tempfile(fileext = ".tif"), chunk_size = c(200,200))
+   	na.tif = read_stars(system.file("tif/na.tif", package = "stars"))
+   	st_write(na.tif, "na.tif")
+   	st_write(na.tif, "na.tif", NA_value = -999)
+   	na.tif = read_stars(system.file("tif/na.tif", package = "stars"), NA_value = -999)
+   	st_write(na.tif, "na.tif")
+   	st_write(na.tif, "na.tif", NA_value = -999)
+   	na.tif = read_stars(system.file("tif/na.tif", package = "stars"), NA_value = -999, proxy = TRUE)
+   	st_write(na.tif, "na.tif")
+   	st_write(na.tif, "na.tif", NA_value = -999)
+   }
+ }
Loading required package: stars
Loading required package: abind
[1] TRUE
[1] TRUE
Geometry set for 30 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 0 ymin: 0.3 xmax: 5 ymax: 2.2
epsg (SRID):    NA
proj4string:    NA
First 5 geometries:
POINT (0 0.3)
POINT (0.5 0.3)
POINT (1 0.3)
POINT (2 0.3)
POINT (4 0.3)
Geometry set for 30 features 
geometry type:  POLYGON
dimension:      XY
bbox:           xmin: -0.25 ymin: 0.2 xmax: 5.5 ymax: 2.3
epsg (SRID):    NA
proj4string:    NA
First 5 geometries:
POLYGON ((-0.25 0.2, 0.25 0.2, 0.25 0.4, -0.25 ...
POLYGON ((0.25 0.2, 0.75 0.2, 0.75 0.4, 0.25 0....
POLYGON ((0.75 0.2, 1.5 0.2, 1.5 0.4, 0.75 0.4,...
POLYGON ((1.5 0.2, 3 0.2, 3 0.4, 1.5 0.4, 1.5 0...
POLYGON ((3 0.2, 4.5 0.2, 4.5 0.4, 3 0.4, 3 0.2))
Geometry set for 20 features 
geometry type:  POINT
dimension:      XY
bbox:           xmin: 1 ymin: 1 xmax: 5 ymax: 4
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
First 5 geometries:
POINT (1 1)
POINT (1 2)
POINT (1 3)
POINT (1 4)
POINT (2 1)
Geometry set for 20 features 
geometry type:  POLYGON
dimension:      XY
bbox:           xmin: 0.5 ymin: 0.5 xmax: 5.5 ymax: 4.5
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
First 5 geometries:
POLYGON ((0.5 0.5, 0.5 1.5, 1.5 1.5, 1.5 0.5, 0...
POLYGON ((0.5 1.5, 0.5 2.5, 1.5 2.5, 1.5 1.5, 0...
POLYGON ((0.5 2.5, 0.5 3.5, 1.5 3.5, 1.5 2.5, 0...
POLYGON ((0.5 3.5, 0.5 4.5, 1.5 4.5, 1.5 3.5, 0...
POLYGON ((1.5 0.5, 1.5 1.5, 2.5 1.5, 2.5 0.5, 1...
Reading layer `nc.gpkg' from data source `/home/edzer/git/sf.Rcheck/sf/gpkg/nc.gpkg' using driver `GPKG'
Simple feature collection with 100 features and 14 fields
Attribute-geometry relationship: 0 constant, 8 aggregate, 6 identity
geometry type:  MULTIPOLYGON
dimension:      XY
bbox:           xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965
epsg (SRID):    4267
proj4string:    +proj=longlat +datum=NAD27 +no_defs
stars object with 2 dimensions and 1 attribute
attribute(s):
     AREA       
 Min.   :0.042  
 1st Qu.:0.108  
 Median :0.142  
 Mean   :0.145  
 3rd Qu.:0.181  
 Max.   :0.241  
 NA's   :30726  
dimension(s):
  from  to   offset      delta                       refsys point values    
x    1 360 -84.3239  0.0246302 +proj=longlat +datum=NAD2... FALSE   NULL [x]
y    1 180  36.5896 -0.0150425 +proj=longlat +datum=NAD2... FALSE   NULL [y]
Simple feature collection with 135 features and 1 field
geometry type:  POLYGON
dimension:      XY
bbox:           xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965
epsg (SRID):    NA
proj4string:    +proj=longlat +ellps=clrk66 +no_defs
First 10 features:
    AREA                       geometry
1  0.070 POLYGON ((-75.90032 36.5595...
2  0.070 POLYGON ((-76.02347 36.5595...
3  0.070 POLYGON ((-75.87569 36.5144...
4  0.061 POLYGON ((-81.3436 36.57461...
5  0.091 POLYGON ((-76.93479 36.5595...
6  0.070 POLYGON ((-75.85106 36.4392...
7  0.070 POLYGON ((-75.82643 36.3640...
8  0.062 POLYGON ((-76.56534 36.5595...
9  0.153 POLYGON ((-80.01357 36.5445...
10 0.114 POLYGON ((-79.52096 36.5445...
Simple feature collection with 32 features and 1 field
geometry type:  POLYGON
dimension:      XY
bbox:           xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965
epsg (SRID):    NA
proj4string:    +proj=longlat +ellps=clrk66 +no_defs
First 10 features:
   AREA                       geometry
1     0 POLYGON ((-75.90032 36.5595...
2     0 POLYGON ((-76.02347 36.5595...
3     0 POLYGON ((-75.87569 36.5144...
4     0 POLYGON ((-75.85106 36.4392...
5     0 POLYGON ((-75.82643 36.3640...
6     0 POLYGON ((-75.8018 36.27376...
7     0 POLYGON ((-75.77717 36.2135...
8     0 POLYGON ((-75.67865 36.0180...
9     0 POLYGON ((-75.65402 35.9729...
10    0 POLYGON ((-75.62939 35.9277...
Error in CPL_polygonize(file, mask_name, "GTiff", "Memory", "foo", character(0),  : 
  contour only available in GDAL >= 2.4.0
[1] "Error in CPL_polygonize(file, mask_name, \"GTiff\", \"Memory\", \"foo\", character(0),  : \n  contour only available in GDAL >= 2.4.0\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<Rcpp::exception in CPL_polygonize(file, mask_name, "GTiff", "Memory", "foo", character(0),     0, contour_options, use_contours, use_integer): contour only available in GDAL >= 2.4.0>
================================================================================
================================================================================
================================================================================
================================================================================
> 
> r = gdal_read(tif)
> gt = c(0,1,0,0,0,1)
> gdal_inv_geotransform(gt)
[1] 0 1 0 0 0 1
> rc = expand.grid(x=1:3, y = 1:3)
> #(xy = xy_from_colrow(rc, gt))
> #xy_from_colrow(xy, gt, inverse = TRUE)
> gdal_crs(tif)
$nbands
[1] 1

$crs
Coordinate Reference System:
  EPSG: 32611 
  proj4string: "+proj=utm +zone=11 +datum=WGS84 +units=m +no_defs"

$gt
[1] 1841001.8       1.5      -5.0 1144003.2      -5.0      -1.5

$gt_inv
[1]  1.085693e+05  5.504587e-02 -1.834862e-01  4.007711e+05 -1.834862e-01
[6] -5.504587e-02

> 
> try(gdal_metadata("foo"))
[1] NA
> gdal_metadata(tif)
[1] "AREA_OR_POINT=Point"
> 
> proc.time()
   user  system elapsed 
  0.802   0.068   0.861 
